import { TSESTree } from '@typescript-eslint/types';
import { Scope } from '@typescript-eslint/scope-manager/src/scope/Scope';
import { ScopeBase } from '@typescript-eslint/scope-manager/src/scope/ScopeBase';
import { ScopeType } from '@typescript-eslint/scope-manager/src/scope/ScopeType';
import { Reference } from '@typescript-eslint/scope-manager/src/referencer/Reference';
import { ScopeManager } from '@typescript-eslint/scope-manager/src/ScopeManager';
import { Variable } from '@typescript-eslint/scope-manager/src/variable';
declare class FunctionScope extends ScopeBase<ScopeType.function, TSESTree.ArrowFunctionExpression | TSESTree.FunctionDeclaration | TSESTree.FunctionExpression | TSESTree.TSDeclareFunction | TSESTree.TSEmptyBodyFunctionExpression | TSESTree.Program, Scope> {
    constructor(scopeManager: ScopeManager, upperScope: FunctionScope['upper'], block: FunctionScope['block'], isMethodDefinition: boolean);
    protected isValidResolution(ref: Reference, variable: Variable): boolean;
}
export { FunctionScope };
//# sourceMappingURL=FunctionScope.d.ts.map