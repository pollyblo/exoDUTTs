import { BlockScope } from '@typescript-eslint/scope-manager/src/scope/BlockScope';
import { CatchScope } from '@typescript-eslint/scope-manager/src/scope/CatchScope';
import { ClassFieldInitializerScope } from '@typescript-eslint/scope-manager/src/scope/ClassFieldInitializerScope';
import { ClassStaticBlockScope } from '@typescript-eslint/scope-manager/src/scope/ClassStaticBlockScope';
import { ClassScope } from '@typescript-eslint/scope-manager/src/scope/ClassScope';
import { ConditionalTypeScope } from '@typescript-eslint/scope-manager/src/scope/ConditionalTypeScope';
import { ForScope } from '@typescript-eslint/scope-manager/src/scope/ForScope';
import { FunctionExpressionNameScope } from '@typescript-eslint/scope-manager/src/scope/FunctionExpressionNameScope';
import { FunctionScope } from '@typescript-eslint/scope-manager/src/scope/FunctionScope';
import { FunctionTypeScope } from '@typescript-eslint/scope-manager/src/scope/FunctionTypeScope';
import { GlobalScope } from '@typescript-eslint/scope-manager/src/scope/GlobalScope';
import { MappedTypeScope } from '@typescript-eslint/scope-manager/src/scope/MappedTypeScope';
import { ModuleScope } from '@typescript-eslint/scope-manager/src/scope/ModuleScope';
import { SwitchScope } from '@typescript-eslint/scope-manager/src/scope/SwitchScope';
import { TSEnumScope } from '@typescript-eslint/scope-manager/src/scope/TSEnumScope';
import { TSModuleScope } from '@typescript-eslint/scope-manager/src/scope/TSModuleScope';
import { TypeScope } from '@typescript-eslint/scope-manager/src/scope/TypeScope';
import { WithScope } from '@typescript-eslint/scope-manager/src/scope/WithScope';
declare type Scope = BlockScope | CatchScope | ClassScope | ClassFieldInitializerScope | ClassStaticBlockScope | ConditionalTypeScope | ForScope | FunctionExpressionNameScope | FunctionScope | FunctionTypeScope | GlobalScope | MappedTypeScope | ModuleScope | SwitchScope | TSEnumScope | TSModuleScope | TypeScope | WithScope;
export { Scope };
//# sourceMappingURL=Scope.d.ts.map